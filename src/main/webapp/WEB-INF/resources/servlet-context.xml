<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context            
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
  		http://www.springframework.org/schema/aop/spring-aop.xsd
  		http://www.springframework.org/schema/tx
  		http://www.springframework.org/schema/tx/spring-tx.xsd
  		http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">	
	
	<import resource="spring-mybatis-mapper.xml"/>
	<import resource="spring-service.xml"/>
	
	<context:component-scan base-package="com.flash.jewelry.controller" />
	
	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <context:property-placeholder location="classpath:db/data-access.properties"/>
    	
	<!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="${jdbc.initLocation}"/>
        <jdbc:script location="${jdbc.dataBaseLocation}"/>
        <!-- <jdbc:script location="${jdbc.dataTestLocation}"/> -->
    </jdbc:initialize-database>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<aop:config>
	    <aop:pointcut id="defaultServiceOperation"
	          expression="execution(* com.flash.jewelry..*(..))"/>	    
	    <aop:advisor pointcut-ref="defaultServiceOperation" advice-ref="defaultTxAdvice"/>	    
   </aop:config>
   <tx:advice id="defaultTxAdvice">
	    <tx:attributes>
		      <tx:method name="get*" read-only="true"/>
		      <tx:method name="*"/>
	    </tx:attributes>
  	</tx:advice>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/flash/jewelry/dao/*.xml" />
	</bean>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/"/>
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1" >
		<property name="prefix" value="/WEB-INF/views/" />		
		<property name="suffix" value=".jsp" />
		
	</bean>	
	
	
	<bean class="org.springframework.web.servlet.view.XmlViewResolver" p:location="/WEB-INF/resources/jasper-views.xml"  p:order="0" />
	
	<!-- dao beans -->
	<!-- <bean id="cityMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.flash.jewelry.dao.CityMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	
	
	<!-- bussiness beans -->

</beans>